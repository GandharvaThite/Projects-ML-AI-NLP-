#include <bits/stdc++.h>
#include <iostream>
using namespace std;

void move(int num,int r, int c,int x, int y, vector<vector<int>>&b,vector<vector<int>>&v,string &s,vector<vector<vector<int>>>&store){
    if(r==x && c == y){
        v[x][y] = num;
        store.push_back(v);
        
        return;
        
    }
    if( r<0||c<0||r>=b.size()||c>=b[0].size()||v[r][c]!=0||(b[r][c]!=0&&b[r][c]!=num)){
        return;
    }
    v[r][c] = num;
    move(num,r,c+1,x,y,b,v,s+='R',store);
    s.pop_back();
    move(num,r+1,c,x,y,b,v,s+='D',store);
    s.pop_back();
    move(num,r,c-1,x,y,b,v,s+='L',store);
    s.pop_back();
    move(num,r-1,c,x,y,b,v,s+='U',store);
    s.pop_back();
    v[r][c]=0;
    
    
}
vector<vector<vector<int>>> shift(vector<vector<vector<int>>>&store){
    return store;
    
}
void clear(vector<vector<vector<int>>>&store){
    store = {};
    
}
void print(vector<vector<vector<int>>>&store){
    for(auto i:store){
        for(auto j:i){
            for(auto k:j){
                cout<<k<<" ";
            }
            cout<<endl;
        }
        cout<<"------------------------"<<endl;
    }
}
void pprint(vector<vector<int>>&b){
    for(auto i:b){
        for(auto j:i){
            cout<<j<<" ";
        }
        cout<<endl;
    }
    cout<<"------------------------"<<endl;
}
int main()
{
    int colors = 9;
    int n =8;
    int m =8;
    // vector<vector<int>>b = {
    //     {1,0,0,0,0,0,0,0,0},
    //     {0,0,0,0,0,0,0,0,0},
    //     {0,0,0,2,0,0,0,0,0},
    //     {0,0,3,0,0,4,0,0,0},
    //     {0,0,0,0,0,5,0,0,0},
    //     {1,0,4,5,0,6,0,0,0},
    //     {7,0,0,8,0,0,0,0,0},
    //     {0,6,0,0,0,7,0,3,0},
    //     {0,0,0,0,0,0,0,2,8}
    // };
    // vector<vector<int>>b={
    //     {1,0,0,0,0,0,0,0,0,1},
    //     {0,0,0,0,0,0,0,0,0,0},
    //     {2,0,0,3,0,4,0,0,0,0},
    //     {0,0,5,0,0,6,0,7,0,0},
    //     {3,5,0,0,6,0,0,0,0,0},
    //     {4,0,0,0,8,0,0,0,0,0},
    //     {9,10,0,10,9,0,0,0,0,0},
    //     {0,11,0,11,0,0,0,0,0,0},
    //     {0,0,0,0,0,0,0,2,0,0},
    //     {7,0,0,0,0,0,0,0,0,8}
    // };
    // vector<vector<int>>b={
    //     {0,0,0,0,0,1},
    //     {0,0,0,0,0,0},
    //     {0,2,3,0,0,0},
    //     {0,0,0,4,0,2},
    //     {0,4,0,1,3,5},
    //     {0,0,0,5,0,0}
    // };
    // vector<vector<int>>b={
    //     {0,0,0,0,0,0,0},
    //     {1,2,0,0,0,3,4},
    //     {5,1,0,0,0,0,6},
    //     {0,0,2,0,0,0,0},
    //     {0,0,0,0,0,3,0},
    //     {0,0,0,5,0,4,0},
    //     {6,0,0,0,0,0,0}
    // };
    vector<vector<int>>b = {
        {1,0,0,1,2,0,0,0},
        {0,0,3,4,5,0,5,0},
        {0,0,6,0,0,0,0,0},
        {0,0,7,0,8,9,0,0},
        {0,0,0,0,4,0,0,0},
        {0,0,0,3,0,0,0,0},
        {0,6,0,7,0,0,8,2},
        {0,0,0,0,0,0,0,9}
    };
    vector<int>col;
    
    vector<vector<int>>s_pos;
    vector<vector<int>>f_pos;
    for(int i=0;i<colors;i++){
        vector<int>xx;
        s_pos.push_back(xx);
        f_pos.push_back(xx);
    }
    
    for(int i=0;i<b.size();i++){
        for(int j=0;j<b[i].size();j++){
            if(b[i][j]!=0){
                s_pos[b[i][j]-1].push_back(i);
                s_pos[b[i][j]-1].push_back(j);
            }
        }
    }
    // for(int i=0;i<s_pos.size();i++){
    //     for(int j=0;j<s_pos[i].size();j++){
    //         cout<<s_pos[i][j]<<" ";
    //     }
    //     cout<<endl;
    // }

    vector<vector<vector<int>>>store;
    vector<vector<int>>v;
    for(int i=0;i<n;i++){
        vector<int>x;
        for(int j=0;j<m;j++){
            x.push_back(0);
        }
        v.push_back(x);
    }
    string s = " ";
    move(1,s_pos[0][0],s_pos[0][1],s_pos[0][2],s_pos[0][3],b,v,s,store);
    v[s_pos[0][2]][s_pos[0][3]] = 0;
    
    
    int i = 2;
    vector<vector<vector<int>>>tp;
    while(i<=colors){
        tp = shift(store);
        clear(store);
        for(int j = 0;j<tp.size();j++){
            move(i,s_pos[i-1][0],s_pos[i-1][1],s_pos[i-1][2],s_pos[i-1][3],b,tp[j],s,store);
            tp[j][s_pos[i-1][2]][s_pos[i-1][3]] = 0;
        }
        
        i+=1;
    }
    pprint(b);
    print(store);
    
    return 0;
}

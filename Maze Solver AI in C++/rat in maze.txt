
#include <iostream>
#include <bits/stdc++.h>
using namespace std;
// bool move_left(int n,int row, int col,vector<vector<int>>&v){
//     if(col!=0){
//         col--;
//         v[row][col] = 1;
//         return true;
//     }
//     return false;
// }
// bool move_up(int n,int row, int col,vector<vector<int>>&v){
//     if(row!=0){
//         row--;
//         v[row][col] = 1;
//         return true;
//     }
//     return false;
// }
bool move_right(int n,int row, int col,vector<vector<int>>&v){
    if(col!=n-1){
        col++;
        v[row][col] = 1;
        return true;
    }
    return false;
}

bool move_down(int n,int row, int col,vector<vector<int>>&v){
    if(row!=n-1){
        row++;
        v[row][col] = 1;
        return true;
    }
    return false;
}

bool maze(int n,int row, int col, vector<vector<int>>&v,vector<vector<int>>&b){
    if(row==n-1&&col==n-1){
        return true;
    }
    int r = col+1;
    if(b[row][r]==1){
        move_right(n,row,col,v);
        v[row][r] = 1;
        if(maze(n,row,col+1,v,b)==true) return true;
        v[row][r] = 0;
    }
    int d = row+1;
    if(b[d][col]==1){
        move_down(n,row,col,v);
        v[d][col] = 1;
        if(maze(n,row+1,col,v,b)==true) return true;
        v[d][col] = 0;
    }
    return false;
    
}
int main()
{
    vector<vector<int>>board={
        {1,0,1,0,1},
        {1,1,1,1,0},
        {0,1,1,0,0},
        {1,0,1,1,1},
        {1,1,1,0,1}
    };
    vector<vector<int>>visited(5,vector<int>(5,0));
    visited[0][0]=1;
    maze(5,0,0,visited,board);
    for(int i=0;i<5;i++){
        for(int j=0;j<5;j++){
            cout<<visited[i][j]<<" ";
        }
        cout<<endl;
    }
    return 0;
}
